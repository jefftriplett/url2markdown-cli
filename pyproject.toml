[project]
name = "url2markdown-cli"
authors = [
    {name = "Jeff Triplett"}
]
version = "2024.10.2"
description = "Fetch a url and translate it to markdown in one command."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "httpx",
    "rich",
    "typer",
]
keywords = ["url2markdown", "url2markdown-cli"]
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Framework :: Django',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]

[project.urls]
Homepage = "https://github.com/jefftriplett/url2markdown-cli"
Issues = "https://github.com/jefftriplett/url2markdown-cli/issues"
CI = "https://github.com/jefftriplett/url2markdown-cli/actions"
Changelog = "https://github.com/jefftriplett/url2markdown-cli/releases"

[project.entry-points.console_scripts]
files-to-claude-xml = "url2markdown_cli:cli"

[tool.bumpver]
commit = true
commit_message = ":bookmark: bump version {old_version} -> {new_version}"
current_version = "2024.10.2"
push = false  # disabled for GitHub Actions
tag = true
version_pattern = "YYYY.MM.INC1"

[tool.bumpver.file_patterns]
"url2markdown_cli/__init__.py" = [
    '__version__ = "{version}"',
]
"pyproject.toml" = [
  'version = "{version}"'
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "media",
    "node_modules",
    "static",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
# magic-trailing-comma = "respect"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
ignore = ["E501", "E741"] # temporary

per-file-ignores = {}

select = [
  # "B", # flake8-bugbear
  "E", # Pycodestyle
  "F", # Pyflakes
  "I", # isort
  "UP", # pyupgrade
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
